{"name":"Puppet-keepalived","tagline":"","body":"# Puppet Keepalived\r\n\r\n## Build status\r\n\r\n[![Build Status](https://travis-ci.org/arioch/puppet-keepalived.png?branch=master)](https://travis-ci.org/arioch/puppet-keepalived)\r\n\r\n## Requirements\r\n\r\n* [concat module](https://github.com/ripienaar/puppet-concat)\r\n\r\n## Tested on...\r\n\r\n* Debian 6 (Squeeze)\r\n* RHEL 6\r\n\r\n## Example usage\r\n\r\n### Basic IP-based VRRP failover\r\n\r\nThis configuration will fail-over when:\r\n\r\na. Master node is unavailable\r\n\r\n```puppet\r\nnode /node01/ {\r\n  include keepalived\r\n\r\n  keepalived::vrrp::instance { 'VI_50':\r\n    interface         => 'eth1',\r\n    state             => 'MASTER',\r\n    virtual_router_id => '50',\r\n    priority          => '101',\r\n    auth_type         => 'PASS',\r\n    auth_pass         => 'secret',\r\n    virtual_ipaddress => '10.0.0.1/29',\r\n    track_interface   => ['eth1','tun0'], # optional, monitor these interfaces.\r\n  }\r\n}\r\n\r\nnode /node02/ {\r\n  include keepalived\r\n\r\n  keepalived::vrrp::instance { 'VI_50':\r\n    interface         => 'eth1',\r\n    state             => 'BACKUP',\r\n    virtual_router_id => '50',\r\n    priority          => '100',\r\n    auth_type         => 'PASS',\r\n    auth_pass         => 'secret',\r\n    virtual_ipaddress => '10.0.0.1/29',\r\n    track_interface   => ['eth1','tun0'], # optional, monitor these interfaces.\r\n  }\r\n}\r\n```\r\n\r\n### Detect application level failure\r\n\r\nThis configuration will fail-over when:\r\n\r\na. NGinX daemon is not running<br>\r\nb. Master node is unavailable\r\n\r\n```puppet\r\nnode /node01/ {\r\n  include ::keepalived\r\n\r\n  keepalived::vrrp::script { 'check_nginx':\r\n    script => '/usr/bin/killall -0 nginx',\r\n  }\r\n\r\n  keepalived::vrrp::instance { 'VI_50':\r\n    interface         => 'eth1',\r\n    state             => 'MASTER',\r\n    virtual_router_id => '50',\r\n    priority          => '101',\r\n    auth_type         => 'PASS',\r\n    auth_pass         => 'secret',\r\n    virtual_ipaddress => '10.0.0.1/29',\r\n    track_script      => 'check_nginx',\r\n  }\r\n}\r\n\r\nnode /node02/ {\r\n  include ::keepalived\r\n\r\n  keepalived::vrrp::script { 'check_nginx':\r\n    script => '/usr/bin/killall -0 nginx',\r\n  }\r\n\r\n  keepalived::vrrp::instance { 'VI_50':\r\n    interface         => 'eth1',\r\n    state             => 'BACKUP',\r\n    virtual_router_id => '50',\r\n    priority          => '100',\r\n    auth_type         => 'PASS',\r\n    auth_pass         => 'secret',\r\n    virtual_ipaddress => '10.0.0.1/29',\r\n    track_script      => 'check_nginx',\r\n  }\r\n}\r\n```\r\n\r\n###I'd like to opt out of having the service controlled; we use another tool for that.\r\n\r\n```puppet\r\nclass { '::keepalived':\r\n  service_manage => false,\r\n}\r\n```\r\n\r\n\r\n## Unit testing\r\n\r\nPlain RSpec:\r\n\r\n    $ rake spec\r\n\r\nUsing bundle:\r\n\r\n    $ bundle exec rake spec\r\n\r\nTest against a specific Puppet or Facter version:\r\n\r\n    $ PUPPET_VERSION=3.2.1  bundle update && bundle exec rake spec\r\n    $ PUPPET_VERSION=2.7.19 bundle update && bundle exec rake spec\r\n    $ FACTER_VERSION=1.6.8  bundle update && bundle exec rake spec\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}